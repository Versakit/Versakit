import{c as w,o as u,G as t,w as s,a,k as o,F as B,b as k,p as C,B as m,j as e,a4 as v,aa as b}from"./chunks/framework.rcZoKwU1.js";import{Z as d}from"./chunks/theme.BBSXUahi.js";import{O as f,E as h}from"./chunks/index.CpKg_UEU.js";const x=`<template>
  <VKPanel shadow="always">始终</VKPanel>
  <VKPanel shadow="hover">悬浮</VKPanel>
  <VKPanel shadow="never">永不</VKPanel>
</template>

<script setup>
import { VKPanel } from '@versakit/ui'
<\/script>
`,y={__name:"shadow",setup(i){return(r,n)=>(u(),w(B,null,[t(o(d),{shadow:"always"},{default:s(()=>n[0]||(n[0]=[a("始终")])),_:1}),t(o(d),{shadow:"hover"},{default:s(()=>n[1]||(n[1]=[a("悬浮")])),_:1}),t(o(d),{shadow:"never"},{default:s(()=>n[2]||(n[2]=[a("永不")])),_:1})],64))}},V=`<template>
  <VKPanel>基本面板</VKPanel>
</template>

<script setup>
import { VKPanel } from '@versakit/ui'
<\/script>
`,D={__name:"base",setup(i){return(r,n)=>(u(),k(o(d),null,{default:s(()=>n[0]||(n[0]=[a("基本面板")])),_:1}))}},Z={tabindex:"0"},K=JSON.parse('{"title":"Panel 面板","description":"","frontmatter":{},"headers":[],"relativePath":"components/panel/index.md","filePath":"components/panel/index.md"}'),A={name:"components/panel/index.md"},g=Object.assign(A,{setup(i){const r=C(!0);return(n,l)=>{const p=m("ClientOnly"),P=m("Tool");return u(),w("div",null,[l[7]||(l[7]=e("h1",{id:"panel-面板",tabindex:"-1"},[a("Panel 面板 "),e("a",{class:"header-anchor",href:"#panel-面板","aria-label":'Permalink to "Panel 面板"'},"​")],-1)),l[8]||(l[8]=e("p",null,"面板通常是指一个独立的容器，用于承载内容。",-1)),l[9]||(l[9]=e("h2",{id:"基础用法",tabindex:"-1"},[a("基础用法 "),e("a",{class:"header-anchor",href:"#基础用法","aria-label":'Permalink to "基础用法"'},"​")],-1)),l[10]||(l[10]=e("p",null,"这是一个很简单的面板。",-1)),v(t(o(f),null,null,512),[[b,r.value]]),t(p,null,{default:s(()=>[t(o(h),{title:"",description:"",locale:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,onMount:l[0]||(l[0]=()=>{r.value=!1}),vueCode:o(V)},{vue:s(()=>[t(D)]),_:1},8,["vueCode"])]),_:1}),l[11]||(l[11]=e("h2",{id:"阴影",tabindex:"-1"},[a("阴影 "),e("a",{class:"header-anchor",href:"#阴影","aria-label":'Permalink to "阴影"'},"​")],-1)),l[12]||(l[12]=e("p",null,"你可以定义什么时候展示面板的阴影效果。",-1)),l[13]||(l[13]=e("p",null,[a("通过"),e("code",null,"shadow"),a("属性设置卡片阴影出现的时刻。该属性的值可以是: "),e("code",null,"always"),a("、"),e("code",null,"hover"),a(" 或 "),e("code",null,"never")],-1)),v(t(o(f),null,null,512),[[b,r.value]]),t(p,null,{default:s(()=>[t(o(h),{title:"",description:"",locale:"",select:"vue",order:"vue,react,html",github:"",gitlab:"",theme:"",lightTheme:"",darkTheme:"",stackblitz:"%7B%22show%22%3Afalse%7D",codesandbox:"%7B%22show%22%3Afalse%7D",codeplayer:"%7B%22show%22%3Afalse%7D",files:"%7B%22vue%22%3A%7B%7D%2C%22react%22%3A%7B%7D%2C%22html%22%3A%7B%7D%7D",scope:"",visible:!0,onMount:l[1]||(l[1]=()=>{r.value=!1}),vueCode:o(x)},{vue:s(()=>[t(y)]),_:1},8,["vueCode"])]),_:1}),l[14]||(l[14]=e("h2",{id:"panel-api",tabindex:"-1"},[a("Panel API "),e("a",{class:"header-anchor",href:"#panel-api","aria-label":'Permalink to "Panel API"'},"​")],-1)),l[15]||(l[15]=e("h3",{id:"panel-属性",tabindex:"-1"},[a("Panel 属性 "),e("a",{class:"header-anchor",href:"#panel-属性","aria-label":'Permalink to "Panel 属性"'},"​")],-1)),e("table",Z,[l[6]||(l[6]=e("thead",null,[e("tr",null,[e("th",null,"属性"),e("th",null,"说明"),e("th",null,"类型"),e("th",null,"默认值")])],-1)),e("tbody",null,[e("tr",null,[l[3]||(l[3]=e("td",null,[e("code",null,"shadow")],-1)),l[4]||(l[4]=e("td",null,"可以使用 shadow 来决定卡片拥有阴影的时机",-1)),e("td",null,[l[2]||(l[2]=e("code",null,"enum",-1)),t(P,{value:"always,hover,never"})]),l[5]||(l[5]=e("td",null,[e("code",null,"always")],-1))])])])])}}});export{K as __pageData,g as default};
